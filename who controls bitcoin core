Кто контролирует Bitcoin Core?
перевод с английского, оригинал "Who controls Bitcoin Core?", Jameson Lopp
Вопрос о том, кто контролирует возможность добавления кода в GitHub-репозиторий Bitcoin Core, имеет тенденцию возникать периодически. На протяжении многих лет это упоминалось различными сторонами  как «центральная точка контроля» протокола Биткойн, но я убежден, что сам вопрос представляет собой ложный след (red herring), который вытекает из авторитарной перспективы - а эта модель не применима к Биткойну. Для непрофессионала, конечно, не очевидно, почему это так, поэтому цель этой статьи - объяснить, как работает Bitcoin Core и, на более высоком уровне, как развивается сам протокол Биткойн.
История Bitcoin Core
Bitcoin Core - это, скорее, точка фокуса разработки протокола Биткойн, чем точка управления и контроля. Если он по какой-либо причине прекратит свое существование, возникнет новая точка фокуса; техническая коммуникационная платформа, на которой она базируется (в настоящее время - репозиторий GitHub), является вопросом удобства, а не целостности проекта или его определения. Фактически, мы уже видели, как точка фокуса разработки Биткойна меняла платформы и даже имена!
В начале 2009 года исходный код проекта Биткойн представлял собой простой файл .rar, размещенный на SourceForge. Первые разработчики на самом деле обменивались патчами с Satoshi по электронной почте.
30 октября 2009 года Sirius (Марти Мальми/Martti Malmi) создал репозиторий для проекта Биткойн на SourceForge
В 2011 году проект проект Биткойн перешел с SourceForge на GitHub
В 2014 году проект проект Биткойн был переименован в Bitcoin Core.

Не доверяй никому
Хотя на организационном уровне существуют несколько аккаунтов GitHub «майнтайнеров», которые имеют возможность внедрять код в основную ветвь, это скорее уборная функция, чем должность со властью. Если бы любой человек мог внедрять код в «мастер», это очень быстро превратилось бы в сценарий «слишком много поваров на кухне». Bitcoin Core следует принципам наименьших привилегий, так чтобы любые полномочия, представляемые отдельным лицам, легко подрывались, если ими злоупотребляют.



С точки зрения безопасности, GitHub доверять нельзя. Любое количество сотрудников GitHub может использовать свои административные привилегии для внедрения кода в репозиторий без согласия майнтайнеров. Но маловероятно, что GitHub злоумышленник также сможет скомпрометировать ключ PGP майнтайнера Bitcoin Core.
Вместо того чтобы основывать целостность кода аккаунтами на GitHub, Bitcoin Core имеет систему непрерывной интеграции, которая выполняет проверки доверенных ключей PGP, которые должны подписывать каждое внедрение кода. Хотя эти ключи связаны с известными лицами, все таки небезопасно предполагать, что так будет всегда - ключ может быть скомпрометирован, и мы об этом не узнаем, если подлинный владелец ключа не уведомит других майнтайнеров. Таким образом, ключи для внедрения кода также не гарантируют идеальную защиту; они просто затрудняют атакующему вводить произвольный код.

Ключи к царству
На момент написания статьи, проверенными отпечатками PGP являются:
71A3B16735405025D447E8F274810B012346C9A6
133EAC179436F14A5CF1B794860FEB804E669320
32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC
B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B
CA03882CB1FC067B5D3ACFE4D300116E1C875A3D

Эти ключи зарегистрированы на:
Wladimir J. van der Laan <laanwj@protonmail.com>
Pieter Wuille <pieter.wuille@gmail.com>
Jonas Schnelli <dev@jonasschnelli.ch>
Marco Falke <marco.falke@tum.de>
Samuel Dobson <dobsonsa68@gmail.com>

Значит ли это, что мы доверяем этим пяти людям? Не совсем. Ключи не являются доказательством личности - эти ключи потенциально могут попасть в руки других людей. Какие гарантии вы действительно получаете, если запускаете python скрипт verify-commits?
python3 contrib/verify-commits/verify-commits.py 
Using verify-commits data from bitcoin/contrib/verify-commits
All Tree-SHA512s matched up to 309bf16257b2395ce502017be627186b749ee749
There is a valid path from "HEAD" to 82bcf405f6db1d55b684a1f63a4aabad376cdad7 where all commits are signed!
Скрипт verify-commits - это проверка целостности, которую любой разработчик может запустить на своем компьютере. При выполнении, скрипт проверяет подпись PGP на каждом коммите слияния с момента коммита 82bcf405… в декабре 2015 года - более 3400 слияний на момент написания. Если скрипт завершается успешно, он говорит нам, что каждая строка кода, которая была изменена с того момента, прошла через процесс разработки Bitcoin Core и была «подписана» кем-то с ключом майнтайнера. Хотя это не является железной гарантией того, что никто не ввел вредоносный код (майнтайнер может стать злонамеренным или у него могут быть украдены ключи), это значительно снижает вероятность атаки. Что такое майнтайнеры и как они достигли этой роли? Мы углубимся в это чуть позже.


Многоуровневая безопасность
Целостность кода Bitcoin Core не должна зависеть только от нескольких криптографических ключей, поэтому существует множество других проверок. Есть много уровней безопасности здесь, чтобы обеспечить глубокую защиту:
Безопасность пул реквестов (pull request)
Совершенно любой человек может свободно предлагать изменения кода для улучшения программного обеспечения, открывая запрос на пул реквест в основную ветку на  bitcoin/bitcoin.
Разработчики проверяют пул реквесты, чтобы убедиться, что они не являются вредоносными. Любой желающий может свободно просматривать пул реквесты и предоставлять обратную связь - нет никаких привратников или вступительных экзаменов для  участия в Bitcoin Core. Если пул реквест доходит до того, что нет разумных возражений против его слияния, майнтайнер выполняет коммит (слияние).
Основные майнтайнеры установили этот пред- push крюк для гарантии, что они не помещают неподписанные коммиты в репозиторий.
Коммиты слияния опционально штампованы с метками времени через OpenTimestamps.
"Система непрерывной интеграции Travis" (Travis Continuous Integration system) регулярно запускает этот скрипт для проверки целостности git дерева (истории) и для проверки того, что все коммиты в основной ветви были подписаны одним из доверенных ключей PGP.
Любой желающий может запустить этот скрипт для проверки подписей PGP во всех коммитах слияния, начиная с декабря 2015 года. Я запустил его во время написания этой статьи, и на моем ноутбуке потребовалось 25 минут.

Безопасность релизов
Детерминистические системы сборки Gitian запускаются независимо несколькими разработчиками с целью создания идентичных бинарников. Если кому-то удается создать сборку, которая не соответствует сборкам других разработчиков, это признак того, что был введен не-детерминизм, и поэтому окончательный релиз не произойдет. Если обнаружился не-детерминизм, разработчики отслеживают, что пошло не так, исправляют это, затем собирают другого релиз-кандидата. Как только детерминированная сборка прошла успешно, разработчики подписывают получившиеся бинарники, гарантируя, что бинарники и цепочка инструментов не были подделаны и что использовался один и тот же источник. Этот метод удаляет процесс сборки и распространения как единую точку сбоя. Любой пользователь  имеющий технические навыки, может запустить свою собственную систему сборки; инструкции здесь.
Как только сборки Gitian завершены успешно и подписаны сборщиками, майнтайнер Bitcoin Core подписывает сообщение PGP с хэшами SHA256 каждой сборки. Если вы решите запустить предварительно собранный бинарник, вы можете проверить его хэш после загрузки, а затем проверить подлинность подписанного сообщения о релизе с помощью хешей. Инструкции для этого можно найти здесь.
Все вышеперечисленное является открытым исходным кодом и может быть проверено всеми, кто обладает навыками и желанием сделать это.
Наконец, даже после прохождения всех вышеперечисленных проверок качества и целостности, код, который вносится в Bitcoin Core и в конечном итоге превращается в релиз, не запускается в сети узлов какой-либо централизованной организацией. Скорее каждый оператор узла должен принять осознанное решение обновить код, который он запускает. Bitcoin Core намеренно не включает в себя функцию автообновления, так как она может потенциально использоваться, чтобы заставить пользователей запустить код, который они не выбирали лично сами.

Несмотря на все технические меры безопасности, которые реализуются проектом Bitcoin Core, ни одна из них не является совершенной, и любая из них теоретически может быть скомпрометирована. Последняя линия защиты целостности кода Bitcoin Core такая же, как и в любом другом проекте с открытым исходным кодом - постоянная бдительность. Чем больше глаз просматривает код Bitcoin Core, тем меньше вероятность того, что вредоносный или некорректный код превратит его в релиз.
Охват кода
В Bitcoin Core много кода для тестирования. Существует набор интеграционных тестов, который работает с каждым PR (pull request), и расширенный набор тестов, который работает каждую ночь на мастере.

Вы можете проверить покрытие кода тестами самостоятельно:
Склонируйте репозиторий Bitcoin Core на GitHub
Установите необходимые зависимости для сборки из исходного кода
Запустите эти команды 
Просмотрите отчет на ./total_coverage/index.html

Альтернативно, вы можете просмотреть отчет о покрытии кода, который Марко Фальке предоставляет здесь.
репорт охвата кодаНаличие такого высокого уровня охвата тестами означает, что существует более высокий уровень уверенности в том, что код функционирует так, как задумано.
Тестирование имеет большое значение, когда дело доходит до консенсуса критически важного программного обеспечения. Для особо сложных изменений разработчики иногда проводят кропотливое тестирование мутаций, то есть тестируют тесты, намеренно нарушая код и проверяя, не дают ли тесты ожидаемый результат. Грег Максвелл (Greg Maxwell) дал некоторое представление об этом процессе, когда он обсуждал релиз 0.15:
"Тест - это тест программного обеспечения, но что тестирует этот тест? Программное обеспечение. Чтобы проверить тест, вы должны взломать программное обеспечение" - Грег Максвелл



Свободная конкуренция рынка
BitMEX написали отличную статью об экосистеме имплементаций Биткойна. Существует более десятка различных имплементаций, совместимых с сетью Биткойн, и еще больше имплементаций «конкурирующих» сетей. Это свобода открытого исходного кода - любой, кто недоволен усилиями проекта Bitcoin Core, может начать собственный проект. Они могут сделать это с нуля, или они могут «форкнуть» программное обеспечение Core.
Competing with Bitcoin Core
Abstract: We examine the power and dynamics of the "Bitcoin Core" software project and we draw distinctions between the…blog.bitmex.com
На момент написания 96% доступных узлов Биткойн работали с какой-то версией Bitcoin Core. Почему это так? Как может Bitcoin Core иметь почти монопольный статус в сети узлов, если усилия, необходимые для перехода на другую программную имплементацию, минимальны? В конце концов, многие другие имплементации предоставляют RPC API-интерфейсы, которые совместимы или по крайней мере очень похожи на Bitcoin Core.
Я считаю, что это является результатом того, что Bitcoin Core является точкой фокуса разработки. В этот проект вложены на порядки больше времени и поддерживающего его таланта, что означает, что код, созданный проектом Bitcoin Core, имеет тенденцию быть наиболее эффективным, надежным и безопасным. Операторы узлов не хотят запускать программное обеспечение которое уступает по качеству, если речь ведется об управлении деньгами. Кроме того, учитывая, что это консенсусное программное обеспечение, а протокол Биткойн не имеет - и, вероятно, не может - иметь формальную спецификацию, потому что никто не имеет права ее писать, несколько безопаснее использовать имплементацию наибольшего фокуса разработки, потому что вы с большей вероятностью будете совместимыми с большей частью остальной сети. В этом смысле код точки фокуса разработки является наиболее близким к тому,  что может существовать на месте спецификации.
Кто такие разработчики Core?
Люди, которые не знакомы с процессом разработки Bitcoin Core, могут взглянуть на проект со стороны и считать Core монолитной организацией. Это далеко не так! Между основными участниками часто возникают разногласия, и даже самые плодовитые участники написали много кода, который никогда не был внедрен в проект. Если вы прочитаете руководящие принципы для участия, вы можете заметить, что они довольно расплывчаты - процесс лучше всего охарактеризовать как «грубый консенсус».
Майнтайнеры примут во внимание, соответствует ли патч общим принципам проекта; соответствует ли минимальным стандартам для включения; и будут оценивать общее согласие авторов.
Кто такие майнтайнеры Bitcoin Core? Они являются участниками, которые создали достаточный социальный капитал в рамках проекта, внеся качественные вклады в течение определенного периода времени. Когда существующая группа майнтайнеров считает, что было бы разумно придать эту роль участнику, проявившего компетентность, надежность и мотивацию в определенной области, они могут предоставить коммит-доступ аккаунту этого человека на GitHub. Роль ведущего майнтайнера предназначена для тех, кто осматривает все аспекты проекта и отвечает за координацию релизов. Это было добровольно передано за эти годы:
Satoshi Nakamoto: 1/3/09–2/23/11
Gavin Andresen: 2/23/11–4/7/14
Wladimir van der Laan: 4/7/14 - настоящее время

Работа в качестве сопровождающего Bitcoin Core часто упоминается как работа уборщика, потому что майнтайнеры фактически не имеют полномочий принимать решения, противоречащие общему мнению участников или пользователей. Тем не менее, роль может быть довольно сложной из-за дополнительного внимания со стороны экосистемы в целом. Например, Грегори Максвелл оставил свою должность майнтайнера в 2017 году по личным причинам; вероятно, из-за общественного давления, которое он испытал во время дебатов о скалировании. Владимир написал вдумчивый пост о стрессе, связанном с поддержкой Core, и о том, почему в свое время было целесообразным лишить Gavin (Andresen) доступа к коммитам, что огорчило многих людей:
Dazed and confused, but trying to continue
I'm happy with the job I'm doing, happy to work with a few very smart people on an extremely interesting project…laanwj.github.io


Точно так же, когда Джефф Гарзик (Jeff Garzik) был исключен из организации GitHub, он и другие были расстроены этим; но он не участвовал в Core в течение двух лет. Оставление его аккаунта GitHub при правах на коммиты в репозиторий не принесло бы пользы проекту - оно только создавало угрозу безопасности и нарушало принцип наименьших привилегий, на который ссылался Владимир в своем посте.
Другие могут взглянуть на Core и подумать, что это башня технократии или слоновой кости, которая затрудняет присоединение новых участников. Но если вы поговорите с участниками, вы обнаружите, что это не так. Хотя всего лишь дюжина людей имела доступ к коммитам за все эти годы, сотни разработчиков внесли свою работу. Я сам сделал несколько небольших вкладов; хотя я не считаю себя «Core разработчиком» - технически я им являюсь. Никто не может помешать вам внести свой вклад!



Похоже, людям очень сложно дается понять то, что точка фокуса в разработке Биткойн не определяется просто страницей Bitcoin Core на GitHub. Хотя Bitcoin Core имеет некоторую структуру (для координации используются централизованные каналы связи), сам проект не подлежит контролю со стороны любого из его участников - даже тех, кто имеет повышенные привилегии в репозитории GitHub. Хотя технически у майнтайнеров существует возможность захватить репозиторий GitHub, подвергнуть цензуре несогласных разработчиков и, возможно, даже сохранить фирменное наименование «Bitcoin Core» - в результате Bitcoin Core просто перестанет быть точкой фокуса разработки. Если разработчики перестанут соглашаться с действиями майнтайнеров, то они просто разветвлят код и перенесут свою работу в другой репозиторий, в котором майнтайнеры Bitcoin Core не имеют административных привилегий.
Даже без «переворота» как такового, если спорные изменения каким-то образом попали бы в Core, нашлись бы разработчики, которые сфоркнули бы программу, удалили спорные изменения и сделали бы их доступными для пользователей. Можно аргументировать, что это именно то, что произошло, когда Амори Сэшэ (Amaury Sechet) форкнул Bitcoin Core и удалил функциональность Segregated Witness для создания Bitcoin ABC. В качестве альтернативы, если Core отклоняет предложенные изменения, которые требуются некоторым людям, разработчики могут форкнуть репозиторий и добавить эти изменения. Это случалось много раз, например, когда:
Mike Hearn форкнул Core чтобы создать Bitcoin XT
Andrew Stone форкнул Core чтобы создать Bitcoin Unlimited
Jeff Garzik форкнул Core чтобы создать BTC1

Форкнуть код - очень просто. Сместить центр фокуса разработки Биткойн сложно - вы должны убедить участников, что им лучше вложить их время на участие в другом проекте.

Также трудно убедить многих, что пользователи не принимают вслепую изменений в Bitcoin Core- это может быть самоутверждающим убеждением, потому что если пользователи не участвуют в процессе консенсуса, осознавая своих опций, они отдают часть своих полномочий разработчикам. Однако власть пользователей была использована во время движения UASF (User Activated Soft Fork) 2017 года. Анонимный разработчик, использующий псевдоним shaolinfry, предложил BIP 148, который заставил бы майнеров активировать функцию Segregated Witness на высоте блока, которая возникнула бы около 1 августа. Однако BIP 148 оказался слишком спорным, чтобы быть принятым в Bitcoin Core, поэтому shaolinfry форкнул Core и опубликовал программное обеспечение «Bitcoin UASF». Эта имплементация привлекла нетривиальное количество пользователей и, вероятно, создала достаточное давление, чтобы убедить майнеров принять BIP 91 для активации вилки до истечения срока BIP 148.
На мой взгляд, лучшие участники Bitcoin Core - это те, кто практикует "экстремальное владение" (extreme ownership). Показательный пример - хотя John Newbery и не был автором того кода, который содержал эту конкретную ошибку консенсуса, он чувствует ответственность за то, что не предотвратил ее слияние посредством тщательного анализа и не обнаружил ее позже при написании тестов:



Мы все - Сатоши.



Участие в Bitcoin Core
Начать участвовать в Core может показаться пугающим, хотя есть много ресурсов, которые помогут стремящимся разработчикам. Инструкции для участия можно найти здесь, хотя вы, возможно, захотите начать с легкого вступления Jimmy Song:
A Gentle Introduction to Bitcoin Core Development
If you're a developer and you own any Bitcoin at all, contributing to Bitcoin Core can be one of the best things you…bitcointechtalk.com
Core разработчик Eric Lombrozo также написал статью о том, как происходят изменения в репозитории Core:
The Bitcoin Core Merge Process
A major point of confusion, especially among people who have not worked a lot on free open source software development…medium.com
Alex B. написал отличную статью о философии развития Биткойн - любой, кто хочет стать серьезным участником, может сэкономить много времени, читая это:
The Tao Of Bitcoin Development
Over the last few years, the buzz generated by Bitcoin's scaling debate has drawn unprecedented attention towards the…medium.com
Здесь может оказаться полезным конкретный пример - при написании этой статьи я столкнулся с трудностями при попытке запустить на моем компьютере скрипт verify-commits.py для проверки целостности истории коммитов на GitHub. Чтобы избавить будущих разработчиков от решения этих проблем, я открыл пул реквест для улучшения документации. Как вы можете видеть из истории PR, четыре разных разработчика внесли свои предложения о том, как улучшить мой запрос. Это варьировалось от использования разной вики-маркапа до упрощенной команды bash до нового параметра, который можно использовать в скрипте verify-commits.py. Я согласился с тем, что все предложения имеют смысл, поэтому я включил их в свой код и обновил свой пул реквест. В этот момент разработчики, которые участвовали в просматривании кода, признали, что они сочли пул реквест приемлемым, и майнтаинер Марко Фальке пометил его для включения в релиз 0.18. После того, как прошло еще несколько дней без каких-либо возражений со стороны разработчиков, код был слит с Core майнтайнером Сэмюэлем Добсоном (Samuel Dobson).
Кто контролирует Биткойн?
Как я часто говорил на протяжении многих лет, практически невозможно полностью понять Биткойн как систему. Определение (контроль) Биткойн-протокола подобно определению языка. Языки появляются спонтанно; согласие по значению слов происходит органически, а не продиктованным словарями. Как словари описывают явление языка, а не определяют его, так и имплементации Биткойн  описывают язык Биткойн с помощью кода. Никто не обязан соглашаться с определением данного слова в словаре, равно как и не вынужден соглашаться с кодом в данной имплементации Биткойн, выполняя его.
Языки не управляются демократией, также и Биткойн не управляется ей; хотя можно слышать, как люди ссылаются на майнеров, узлов, разработчиков или «голосующих» пользователей - не существует такого механизма, который позволил бы большинству голосов любого рода заставить меньшинство принять изменения, с которыми они не согласны. Биткойн - это анархия: без правителей, но не без правил. Правила определяются и применяются индивидуальными участниками сети.
Хотя изменения в самом протоколе Биткойн обычно вносятся через формальный процесс Bitcoin Improvement Proposal, даже это всего лишь рекомендуемая лучшая практика, и никто не может быть принужден следовать ей. Это просто более формализованный способ попытаться проводить изменения через процесс экспертной оценки и достижения консенсуса.
Как бы трудно это ни было объяснить и понять, это критически важный аспект антихрупкости Биткойна - если бы существовала единственная точка контроля, это была бы также единственная точка отказа, которую могли бы использовать мощные структуры, которым угрожает успех Биткойна , В конечном счете, каждый оператор узла управляет собой, гарантируя, что никто в сети не нарушает правила, с которыми они согласны. Эта модель безопасности является основой для управления Биткойн "снизу вверх".



Никто не контролирует Биткойн.
Никто не контролирует точку фокуса разработки Биткойн.
